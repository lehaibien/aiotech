name: aiotech_dev
version: 'dev'
services:
  frontend:
    build: ./Frontend/
    container_name: aiotech_web
    environment:
      - NEXT_PUBLIC_API_URL=http://backend:5554/
      - NEXT_PUBLIC_FRONTEND_URL=http://localhost:3000/
      - AUTH_URL=http://localhost:3000/
      - NEXT_PUBLIC_ANALYTICS_URL=http://localhost:8000
    ports:
      - "3000:2400"
    networks:
      - public

  backend:
    build: ./Backend/
    container_name: aiotech_api
    environment:
      - ConnectionStrings__DefaultConnection=Server=database;Database=AioTech;User Id=sa;Password=${DB_PASSWORD};Trusted_Connection=false;TrustServerCertificate=True;MultipleActiveResultSets=true
      - ConnectionStrings__Redis=redis:6379
      - ConnectionStrings__ElasticSearch=http://elastic_search:9200
      - ConnectionStrings__Minio=http://minio:9000
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      - SEQ_URL=http://seq:80
      - ASPNETCORE_ENVIRONMENT=DEVELOPMENT
      - ASPNETCORE_URLS=http://+:5554
      - BE_StaticUrl=http://localhost:5554/static
    depends_on:
      database:
        condition: service_healthy
      redis:
        condition: service_started
      seq:
        condition: service_started
    ports:
      - "5554:5554"
    networks:
      - backend
    volumes:
      - wwwroot:/app/wwwroot

  seq:
    image: datalust/seq:latest
    container_name: aiotech_seq
    ports:
      - "5341:80"  # Seq UI on http://localhost:5341
    environment:
      - ACCEPT_EULA=Y
    networks:
      - backend
  redis:
    image: redis:latest
    container_name: aiotech_redis
    ports:
      - "6379:6379"
    environment:
      REDIS_DATABASES: 16
      REDIS_MAXMEMORY: 1gb
    volumes:
      - redis_data:/data
    networks:
      - backend

  database:
    image: "mcr.microsoft.com/mssql/server:2019-latest"
    container_name: aiotech_db
    ports:
      - "1433:1433"
    environment:
      - TZ=Asia/Ho_Chi_Minh
      - MSSQL_PID=Express
      - MSSQL_SA_PASSWORD=${DB_PASSWORD}
      - ACCEPT_EULA="Y"
    networks:
      - backend
    volumes:
      - database-data:/var/opt/mssql
    healthcheck:
      test: ["CMD", "sqlcmd", "-U", "sa", "-P", "${DB_PASSWORD}", "-Q", "SELECT 1"]
      interval: 5s
      timeout: 30s
      retries: 5
  elastic_search:
    image: "docker.elastic.co/elasticsearch/elasticsearch-wolfi:9.0.0"
    container_name: aiotech_elastic_search
    ports:
      - 9200:9200
    environment:
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      - discovery.type=single-node
    volumes:
      - elastic_data:/usr/share/elasticsearch/data
    networks:
      - backend
  minio:
    image: minio/minio
    container_name: aiotech_minio
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000" # MinIO API
      - "9001:9001" # MinIO Console
    environment:
      MINIO_ROOT_USER: aiotech
      MINIO_ROOT_PASSWORD: ${MINIO_PASSWORD}
      MINIO_REGION_NAME: us-east-1
    volumes:
      - storage_data:/data
    networks:
      - backend

volumes:
  database-data:
  wwwroot:
  redis_data:
  elastic_data:
  storage_data:

networks:
  backend:
    driver: bridge
  public:
    driver: bridge
